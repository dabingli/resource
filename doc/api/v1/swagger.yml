swagger: '2.0'
info:
  version: "1.0.0"
  title: 资源中心 API
  description: |
    提供获取资源中心数据的统一接口

    使用 REST 风格的 API

    出于安全考虑，生产环境可能会使用 HTTPS，客户端须同时支持 HTTP, HTTPS，且支持服务器端将 HTTP 请求重定向到 HTTPS

    ### 请求格式

    * GET 请求，参数以查询字符串形式传递
    * 非 GET 请求，参数在请求体中以表单形式传递，特别说明的也可通过查询字符串传递
    * 如无特殊说明，参数值都是大小写敏感的

    __数据类型__

    查询字符串及表单都只支持传递字符串及字符串数组，部分类型需要转为字符串后传递

    * boolean: 以 "0", "1"，或 "false", "true" 传递

    __全局参数__

      * language: 语言，支持 en, zh_CN
      * site_code: 平台标识，必须传递，用以为不同平台提供不同功能，以及方便以后的统计、分析
          * E选材: 51exc
          * E找砖: ezz168
          * E分销: 97efx
          * E采购: 51ecg
          * E直供: 51ezg
          * E找砖微商: ezz-ws
          * B2B平台: b2b
          * E出口: 暂无
          * 家居网: llhome
          * chinahome: chinahomeb2b
          * lolatiles: lolatiles
      * user_id: 用户 ID，用以为不同用户提供不同信息。非必须传递，视具体 API 而定

    __平台配置__

    各平台的业务逻辑不尽相同，参数的可选值也有所不同

    以下为各平台对参数的限制，各平台只能传递相应的可选值。若只有一个可选值，服务器端将忽略所传参数值

      * 51ezg:
          * language: zh_CN

    ### 客户端信息

    为便于统计、排查问题，客户端应在请求的 User-Agent 中包含以下信息：

    * 编程语言及其版本
    * HTTP 请求库的名称、版本
    * 应用名称

    如 "PHP/7.0.13 curl/7.51.0 chinahomeb2b"

    ### 鉴权

    暂无，后期再考虑

    ### 响应格式

    为了便于实现和处理，不使用 RESTful 风格的错误处理方式（以 HTTP 状态码区分状态），全部返回 200 状态码：

    * 服务器正确处理或捕获到异常时，返回 200 状态码
    * 非 200 状态码表示请求未到达应用服务器，或应用服务器遇到了未捕获的异常

    响应的主体内容为 JSON 数据，包含以下信息：

    * code: 错误代码。成功时为 0，失败时为非 0 数字
    * msg: 错误信息/提示信息。保证存在且不为 null，但不保证对用户友好（即不能直接显示给用户）
    * data: 数据。可包含任意结构。若请求失败或无需返回数据，则不包含 data 部分

    例如：

    ```json
    {
      "code": 0,
      "msg": "OK",
      "data": [
        {
          "id": 11,
          "name": "仿古砖",
          "children": [
            {
              "id": 21,
              "name": "仿木"
            }
          ]
        }
      ]
    }
    ```

    部分数据类型的返回格式：

    * 小数: 字符串，小数点后位数不定。由于 JSON 中的小数类型只支持浮点数，而浮点数存在[不准确的问题](https://en.wikipedia.org/wiki/Floating_point#Accuracy_problems)，因此以字符串形式返回
    * 日期时间: [ISO-8601 格式](https://en.wikipedia.org/wiki/ISO_8601)，如 "2016-11-24T11:14:00+0800"，不含小数秒部分，时区不保证固定，客户端应转换到自己的时区后再使用
    * 日期、时间: 暂无只返回日期或时间部分的，目前返回的都完整包含日期、时间、时区三部分信息

    ### 业务逻辑

    __价格__

    所有平台都有三种价格：面价、非会员价、会员价

    国外网站的三种价格都不分平台、仓库

    国内网站的面价分平台，不分仓库；非会员价、会员价既分平台，也分仓库

    __仓库__

    国外网站不区分仓库；国内网站区分，获取商品时可按仓库筛选，每个商品的信息中也会包含仓库信息

    __价格单位__

    国内网站不区分价格单位

    __货币单位__

    国外网站一律使用美元，国内网站一律使用人民币

    ### 错误代码

    为便于扩展，错误代码尽量不要太紧凑，预留足够的扩展空间

    * 10000~19999: 请求错误（责任在客户端）
    * 20000~29999: 服务器错误
    * 30000~39999: 通用错误
    * 40000~49999: 各功能模块的错误

    代码   |      默认消息        | 说明
    ------|--------------------|-----
      0   | OK                 | 成功
    10000 | Bad request        | 请求错误，不能被正确解析
    10004 | Route not found    | API 不存在
    20000 | Server error       | 服务器端捕获到错误（如代码错误、连接外部服务错误）
    30001 | Unauthorized       | 鉴权失败
    30002 | Missing parameter: | 缺少必须的参数
    30003 | Forbidden          | 鉴权成功，但没有该操作的权限
    30004 | Record not found   | 请求的数据不存在，或所传参数无相应数据，如传递了商品馆参数但该商品馆并不存在
    30005 | Wrong parameter    | 参数错误。类型错误，或值不合法，如未知的 site_code, 不支持的 language
    40001 | Invalid field: value | 产品列表的筛选条件错误。用于告知客户端应重新获取可用筛选条件和合法的可选值

    ### 文档说明

    * __40000 以下的状态码所有 API 都可能返回，各 API 中不再单独列出__
    * __成功时的响应模型只包含 data 的值__
    * __描述中包含【国内网站】/【国外网站】的字段，只对国内/国外网站返回__

# the domain of the service. Use current domain if not specified
# host: api.uber.com
# array of all schemes that your API supports. Use current schema if not specified
# schemes:
#   - http
#   - https
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
